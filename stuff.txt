client id: 9dae18a6-567d-4555-9dce-2c50a3ad3ecf
authority: ...../3d1d815e-5346-4244-9f7b-62b78fb742b1
redirecturl: https://testenv.icgc.local/InfracreditBusinessReportFE
scopes: api://aba68f74-198c-4271-bbb1-8331688b4a09/Grant.API.Access



import { LogLevel } from "@azure/msal-browser";

export const msalConfig = {
  auth: {
    clientId: "9dae18a6-567d-4555-9dce-2c50a3ad3ecf",
    authority:
      "https://login.microsoftonline.com/3d1d815e-5346-4244-9f7b-62b78fb742b1",
    redirectUri: "https://testenv.icgc.local/InfracreditBusinessReportFE/",
    // redirectUri: "http://localhost:3000/",
  },
  cache: {
    cacheLocation: "sessionStorage", // This configures where your cache will be stored
    storeAuthStateInCookie: false, // Set this to "true" if you are having issues on IE11 or Edge
  },
  system: {
    loggerOptions: {
      loggerCallback: (level: any, message: any, containsPii: any) => {
        if (containsPii) {
          return;
        }
        switch (level) {
          case LogLevel.Error:
            console.error(message);
            return;
          case LogLevel.Info:
            console.info(message);
            return;
          case LogLevel.Verbose:
            console.debug(message);
            return;
          case LogLevel.Warning:
            console.warn(message);
            return;
          default:
            return;
        }
      },
    },
  },
};

export const loginRequest = {
  scopes: ["api://aba68f74-198c-4271-bbb1-8331688b4a09/Grant.API.Access"],
  // scopes: ["User.Read"],
};

export const graphConfig = {
  graphMeEndpoint: "https://graph.microsoft.com/v1.0/me", //e.g. https://graph.microsoft.com/v1.0/me
};




    const [contractFiles, setContractFiles] = useState<any>([
    {
      uri: "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf",
    },
  ]



  import DocViewer, { DocViewerRenderers } from "react-doc-viewer";

// import DocViewer, { DocViewerRenderers } from "@cyntler/react-doc-viewer";
// import "@cyntler/react-doc-viewer/dist/index.css";

 {
   /* <DocViewer
                      documents={docs}
                      config={{
                        header: {
                          disableHeader: false,
                          disableFileName: false,
                          retainURLParams: false,
                        },
                      }}
                      pluginRenderers={DocViewerRenderers}
                    /> */
 }
 {
   /* <DocViewer
                      documents={docs}
                      pluginRenderers={DocViewerRenderers}
                    /> */
 }






  const LinkItems: Array<LinkItemProps> = [
    {
      name: "Dashboard",
      path: "/",
      icon: "/images/dashboard.svg",
      iconActive: "/images/dashboard-active.svg",
      isVisble:
        role === "User" ||
        // (role === "User" && department === "Legal") ||
        role === "Admin" ||
        role === "Manager" ||
        role === "Supervisor" ||
        role === "Viewer"
          ? true
          : false,
    },
    {
      name: "Documents",
      path: "/dashboard/documents",
      icon: "/images/documents.svg",
      iconActive: "/images/documents-active.svg",
      isVisble:
        (role === "User" && department !== "ESG") ||
        // role === "user-contracts" ||
        role === "Admin" ||
        role === "Manager" ||
        role === "Supervisor" ||
        role === "Viewer"
          ? true
          : false,
    },
    {
      name: "Deleted",
      path: "/dashboard/deleted",
      icon: "/images/deleted.svg",
      iconActive: "/images/deleted-active.svg",
      isVisble:
        (role === "User" && department !== "ESG") ||
        role === "user-contracts" ||
        role === "Admin" ||
        role === "Manager" ||
        role === "Supervisor"
          ? true
          : false,
    },
    {
      name: "Tasks",
      path: "/dashboard/tasks",
      icon: "/images/tasks.svg",
      iconActive: "/images/tasks-active.svg",
      isVisble:
        (role === "User" && department !== "Legal" && department !== "ESG") ||
        role === "Admin" ||
        role === "Manager" ||
        role === "Supervisor"
          ? true
          : false,
    },
    {
      name: "Contracts",
      path: "/dashboard/contracts",
      icon: "/images/contracts.svg",
      iconActive: "/images/contracts-active.svg",
      isVisble:
        (role === "User" && department !== "Legal" && department !== "ESG") ||
        role === "Admin" ||
        role === "Manager" ||
        role === "Supervisor"
          ? true
          : false,
    },
    {
      name: "Staffs",
      path: "/dashboard/admin",
      icon: "/images/admin.svg",
      iconActive: "/images/admin-active.svg",
      isVisble: role === "Admin" ? true : false,
    },
  ];